'use strict';
const states = {};
// eslint-disable-next-line no-unused-vars
module.exports = (req, res, next) =>{

  const {url, method , body , headers} = req;
  const secret =  headers['x-state-parameter-secret'];
  const routerConfig = req.app.get('mainRouterConfig');

  if (!secret || secret !== routerConfig.stateParameterSecret){
    res.statusCode = 401;
    return res.end(JSON.stringify({error: 'Invalid secret value'}));
  }

  if (method === 'POST' && body && body.state){
    states[body.state] =  body.state;
    res.statusCode = 200;
    return res.end();
  }

  if (method === 'GET'){
    const parameter =  url.split('/').pop();
    if (!parameter){
      res.statusCode = 401;
      return res.end(JSON.stringify({error: 'State parameter not received from Authorization service'}));
    }
    if (states[parameter]){
      delete states[parameter];
      res.statusCode = 200;
      return res.end();
    }
    res.statusCode = 401;
    return res.end(JSON.stringify({error: 'Invalid state parameter'}));
  }

  res.statusCode = 400;
  return res.end();
};