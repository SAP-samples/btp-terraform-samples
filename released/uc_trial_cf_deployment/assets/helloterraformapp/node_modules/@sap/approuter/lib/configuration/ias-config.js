'use strict';

const _ = require('lodash');
const path = require('path');
const xsenv = require('@sap/xsenv');
const VError = require('verror').VError;
const tracer = require('../utils/logger').getTracer(__filename);

exports.load = function (workingDir) {
  let pathToDefaultServices = path.join(workingDir, 'default-services.json');
  try {
    let iasCredentials = xsenv.getServices({ ias: matchesIas }, pathToDefaultServices).ias;
    if (process.env.IAS_PRIVATE_KEY){
      iasCredentials.key = process.env.IAS_PRIVATE_KEY;
    }
    if (iasCredentials.domains && !iasCredentials.domain) {
      iasCredentials.domain = typeof(iasCredentials.domains) === 'string' ? JSON.parse(iasCredentials.domains)[0] : iasCredentials.domains[0];
    }
    return iasCredentials;
  } catch (e) {
    tracer.debug(new VError(e, 'Cannot find service ias in environment'));
    return {};
  }
};

function matchesIas(service) {
  let iasName = process.env.IAS_SERVICE_NAME;
  if (iasName) {
    return service.name === iasName;
  }

  if (_.includes(service.label, 'identity') || service.label === 'identity') {
    return true;
  }
  if (service.label === 'user-provided' && service.credentials && (_.includes(service.credentials.label, 'identity') || service.label === 'identity')) {
    return true;
  }
  return false;
}
