'use strict';

const fs = require('fs');
const tracer = require('./logger').getTracer(__filename);
const xsenv = require('@sap/xsenv');

module.exports = {
  getAppEnv: function () {
    let appEnv = {};
    let vcap = process.env.VCAP_APPLICATION;
    if (vcap) {
      try {
        appEnv = JSON.parse(vcap);
      } catch (err) {
        tracer.debug('vcap-utils: Could not parse VCAP_APPLICATION!', err);
      }
    }
    setName(appEnv);
    return appEnv;
  },

  getServiceCredentials : function (options) {
    let errorOccurred;
    let credentials;
    try {
      credentials = xsenv.serviceCredentials(options);
    } catch (e) {
      errorOccurred = true;
    }
    if (errorOccurred || !credentials) {
      tracer.debug('service credentials with options ' + JSON.stringify(options) + ' not found');
      return null;
    }
    return credentials;
  }
};

function setName(appEnv) {
  if (appEnv.name || appEnv.application_name) {
    return;
  }
  try {
    let packageJsonAsStr = fs.readFileSync('package.json', 'utf8');
    let packageJson = JSON.parse(packageJsonAsStr);
    if (packageJson.name) {
      appEnv.name = packageJson.name;
    }
  } catch (err) {
    tracer.debug('vcap-utils: Could not read from package.json', err);
  }
}
