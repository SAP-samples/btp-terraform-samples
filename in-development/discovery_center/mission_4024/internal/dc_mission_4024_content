"main.tf":"###############################################################################################\n# Setup subaccount domain and the CF org (to ensure uniqueness in BTP global account)\n###############################################################################################\nlocals {\n  random_uuid = uuid()\n  project_subaccount_domain = \"buildapps${local.random_uuid}\"\n  project_subaccount_cf_org = substr(replace(\"${local.project_subaccount_domain}\", \"-\", \"\"),0,32)\n}\n \n###############################################################################################\n# Creation of subaccount\n###############################################################################################\nresource \"btp_subaccount\" \"create_subaccount\" {\n  # Use count to create this resource conditionally\n  count = var.subaccount_id == \"\" ? 1 : 0\n\n  name      = var.subaccount_name\n  subdomain = local.project_subaccount_domain\n  region    = lower(var.region)\n  usage = \"USED_FOR_PRODUCTION\"\n}\n\ndata \"btp_subaccount\" \"project\" {\n  id = var.subaccount_id != \"\" ? var.subaccount_id : btp_subaccount.create_subaccount[0].id\n}\n \n###############################################################################################\n# Assignment of emergency admins to the sub account as sub account administrators\n###############################################################################################\nresource \"btp_subaccount_role_collection_assignment\" \"subaccount_users\" {\n  for_each = toset(\"${var.emergency_admins}\")\n  subaccount_id         = data.btp_subaccount.project.id\n  role_collection_name  = \"Subaccount Administrator\"\n  user_name             = each.value\n}\n \n###############################################################################################\n# Assign custom IDP to sub account\n###############################################################################################\nresource \"btp_subaccount_trust_configuration\" \"fully_customized\" {\n  subaccount_id = data.btp_subaccount.project.id\n  identity_provider = var.custom_idp != \"\" ? var.custom_idp : element(split(\"/\", btp_subaccount_subscription.identity_instance[0].subscription_url), 2)\n}\n \nresource \"btp_subaccount_entitlement\" \"identity\" {\n  # Use count to create this resource conditionally\n  count = var.custom_idp == \"\" ? 1 : 0\n \n  subaccount_id = data.btp_subaccount.project.id\n  service_name  = \"sap-identity-services-onboarding\"\n  plan_name     = \"default\"\n}\n \nresource \"btp_subaccount_subscription\" \"identity_instance\" {\n  # Use count to create this resource conditionally\n  count = var.custom_idp == \"\" ? 1 : 0\n \n  subaccount_id = data.btp_subaccount.project.id\n  app_name      = \"sap-identity-services-onboarding\"\n  plan_name     = \"default\"\n  parameters = jsonencode({\n    cloud_service = \"TEST\"\n  })\n}\n \n###############################################################################################\n# Prepare and setup app: SAP Build Workzone, standard edition\n###############################################################################################\n# Entitle subaccount for usage of app  destination SAP Build Workzone, standard edition\nresource \"btp_subaccount_entitlement\" \"build_workzone\" {\n  subaccount_id = data.btp_subaccount.project.id\n  service_name  = \"SAPLaunchpad\"\n  plan_name     = var.build_workzone_service_plan\n \n  # TODO: unclear, why this is needed for canary if workzone_service_plan free is used (not needed in other cases: canary standard plan or live free)\n  #amount        = var.build_workzone_service_plan == \"free\" ? 1 : null\n}\n \n# Create app subscription to SAP Build Workzone, standard edition (depends on entitlement)\nresource \"btp_subaccount_subscription\" \"build_workzone\" {\n  subaccount_id = data.btp_subaccount.project.id\n  app_name      = \"SAPLaunchpad\"\n  plan_name     = var.build_workzone_service_plan\n  depends_on    = [btp_subaccount_entitlement.build_workzone]\n}\n \n###############################################################################################\n# Prepare and setup app: SAP Build Apps\n###############################################################################################\n# Entitle subaccount for usage of app  destination SAP Build Workzone, standard edition\nresource \"btp_subaccount_entitlement\" \"sap_build_apps\" {\n  subaccount_id = data.btp_subaccount.project.id\n  service_name  = \"sap-build-apps\"\n  plan_name     = var.sap_build_apps_service_plan\n  amount = 1\n  depends_on = [btp_subaccount_trust_configuration.fully_customized]\n}\n \n# Create a subscription to the SAP Build Apps\nresource \"btp_subaccount_subscription\" \"sap-build-apps_standard\" {\n  subaccount_id = data.btp_subaccount.project.id\n  app_name      = \"sap-appgyver-ee\"\n  plan_name     = var.sap_build_apps_service_plan\n  depends_on = [btp_subaccount_entitlement.sap_build_apps]\n}\n \n# Get all roles in the subaccount\ndata \"btp_subaccount_roles\" \"all\" {\n  subaccount_id = data.btp_subaccount.project.id\n  depends_on =[btp_subaccount_subscription.sap-build-apps_standard]\n}\n \n###############################################################################################\n# Setup for role collection BuildAppsAdmin\n###############################################################################################\n# Create the role collection\nresource \"btp_subaccount_role_collection\" \"build_apps_BuildAppsAdmin\" {\n  subaccount_id = data.btp_subaccount.project.id\n  name = \"BuildAppsAdmin\"\n \n  roles = [\n    for role in data.btp_subaccount_roles.all.values : {\n      name                 = role.name\n      role_template_app_id = role.app_id\n      role_template_name   = role.role_template_name\n    } if contains([\"BuildAppsAdmin\"], role.name)\n  ]\n}\n# Assign users to the role collection\nresource \"btp_subaccount_role_collection_assignment\" \"build_apps_BuildAppsAdmin\" {\n  depends_on = [btp_subaccount_role_collection.build_apps_BuildAppsAdmin]\n  for_each = toset(var.users_BuildAppsAdmin)\n  subaccount_id = data.btp_subaccount.project.id\n  role_collection_name = \"BuildAppsAdmin\"\n  user_name            = each.value\n  origin               = btp_subaccount_trust_configuration.fully_customized.origin\n}\n \n###############################################################################################\n# Setup for role collection BuildAppsDeveloper\n###############################################################################################\n# Create the role collection\nresource \"btp_subaccount_role_collection\" \"build_apps_BuildAppsDeveloper\" {\n  subaccount_id = data.btp_subaccount.project.id\n  name = \"BuildAppsDeveloper\"\n \n  roles = [\n    for role in data.btp_subaccount_roles.all.values : {\n      name                 = role.name\n      role_template_app_id = role.app_id\n      role_template_name   = role.role_template_name\n    } if contains([\"BuildAppsDeveloper\"], role.name)\n  ]\n}\n# Assign users to the role collection\nresource \"btp_subaccount_role_collection_assignment\" \"build_apps_BuildAppsDeveloper\" {\n  depends_on = [btp_subaccount_role_collection.build_apps_BuildAppsDeveloper]\n  for_each = toset(var.users_BuildAppsDeveloper)\n  subaccount_id = data.btp_subaccount.project.id\n  role_collection_name = \"BuildAppsDeveloper\"\n  user_name            = each.value\n  origin               = btp_subaccount_trust_configuration.fully_customized.origin\n}\n \n###############################################################################################\n# Setup for role collection RegistryAdmin\n###############################################################################################\n# Create the role collection\nresource \"btp_subaccount_role_collection\" \"build_apps_RegistryAdmin\" {\n  subaccount_id = data.btp_subaccount.project.id\n  name = \"RegistryAdmin\"\n \n  roles = [\n    for role in data.btp_subaccount_roles.all.values : {\n      name                 = role.name\n      role_template_app_id = role.app_id\n      role_template_name   = role.role_template_name\n    } if contains([\"RegistryAdmin\"], role.name)\n  ]\n}\n# Assign users to the role collection\nresource \"btp_subaccount_role_collection_assignment\" \"build_apps_RegistryAdmin\" {\n  depends_on = [btp_subaccount_role_collection.build_apps_RegistryAdmin]\n  for_each = toset(var.users_RegistryAdmin)\n  subaccount_id = data.btp_subaccount.project.id\n  role_collection_name = \"RegistryAdmin\"\n  user_name            = each.value\n  origin               = btp_subaccount_trust_configuration.fully_customized.origin\n}\n \n###############################################################################################\n# Setup for role collection RegistryDeveloper\n###############################################################################################\n# Create the role collection\nresource \"btp_subaccount_role_collection\" \"build_apps_RegistryDeveloper\" {\n  subaccount_id = data.btp_subaccount.project.id\n  name = \"RegistryDeveloper\"\n \n  roles = [\n    for role in data.btp_subaccount_roles.all.values : {\n      name                 = role.name\n      role_template_app_id = role.app_id\n      role_template_name   = role.role_template_name\n    } if contains([\"RegistryDeveloper\"], role.name)\n  ]\n}\n# Assign users to the role collection\nresource \"btp_subaccount_role_collection_assignment\" \"build_apps_RegistryDeveloper\" {\n  depends_on = [btp_subaccount_role_collection.build_apps_RegistryDeveloper]\n  for_each = toset(var.users_RegistryDeveloper)\n  subaccount_id = data.btp_subaccount.project.id\n  role_collection_name = \"RegistryDeveloper\"\n  user_name            = each.value\n  origin               = btp_subaccount_trust_configuration.fully_customized.origin\n}\n###############################################################################################\n# Create destination for Visual Cloud Functions\n###############################################################################################\n# Get plan for destination service\ndata \"btp_subaccount_service_plan\" \"by_name\" {\n  subaccount_id = data.btp_subaccount.project.id\n  name          = \"lite\"\n  offering_name = \"destination\"\n  depends_on    = [btp_subaccount_subscription.build_workzone]\n}\n \n# Get subaccount data\ndata \"btp_subaccount\" \"subaccount\" {\n  id = data.btp_subaccount.project.id\n}\n \n# Create the destination\nresource \"btp_subaccount_service_instance\" \"vcf_destination\" {\n  subaccount_id  = data.btp_subaccount.project.id\n  serviceplan_id =  data.btp_subaccount_service_plan.by_name.id\n  name           = \"SAP-Build-Apps-Runtime\"\n  parameters = jsonencode({\n    HTML5Runtime_enabled = true\n    init_data = {\n      subaccount = {\n        existing_destinations_policy = \"update\"\n        destinations = [\n          {\n            Name = \"SAP-Build-Apps-Runtime\"\n            Type = \"HTTP\"\n            Description = \"Endpoint to SAP Build Apps runtime\"\n            URL = \"https://${data.btp_subaccount.subaccount.subdomain}.cr1.${data.btp_subaccount.subaccount.region}.apps.build.cloud.sap/\"\n            ProxyType = \"Internet\"\n            Authentication = \"NoAuthentication\"\n            \"HTML5.ForwardAuthToken\" = true\n          }\n        ]\n      }\n    }\n  })\n}\n \n \n###############################################################################################\n# Prepare and setup service: destination\n###############################################################################################\n# Entitle subaccount for usage of service destination\nresource \"btp_subaccount_entitlement\" \"destination\" {\n  subaccount_id = data.btp_subaccount.project.id\n  service_name  = \"destination\"\n  plan_name     = \"lite\"\n}\n \n# Assign users to Role Collection: Launchpad_Admin\nresource \"btp_subaccount_role_collection_assignment\" \"launchpad_admin\" {\n  for_each = toset(\"${var.emergency_admins}\")\n  subaccount_id        = data.btp_subaccount.project.id\n  role_collection_name = \"Launchpad_Admin\"\n  user_name            = each.value\n  depends_on           = [btp_subaccount_subscription.build_workzone]\n}",
		"providers.tf":"terraform {\n  required_providers {\n    btp = {\n      source  = \"SAP/btp\"\n      version = \"0.5.0-beta1\"\n    }\n  }\n}\n\nprovider \"btp\" {\n  idtoken        = var.idtoken\n\n  globalaccount  = var.globalaccount\n  cli_server_url = \"https://cpcli.cf.eu10.hana.ondemand.com\"\n}",
		"outputs.tf":"output \"subaccount_id\" {\n  value       = data.btp_subaccount.project.id\n  description = \"The ID of the project subaccount.\"\n}\noutput \"sap_build_app_subscription_url\" {\n  value       = btp_subaccount_subscription.sap-build-apps_standard.subscription_url\n  description = \"The subscription_url of build app.\"\n}",
		"variables.tf":"variable \"idtoken\" {\n  type        = string\n}\n\nvariable \"globalaccount\" {\n  type        = string\n  description = \"The globalaccount subdomain where the sub account shall be created.\"\n}\n \nvariable \"subaccount_name\" {\n  type        = string\n  description = \"The subaccount name.\"\n  default     = \"My SAP Build Apps subaccount\"\n}\n\nvariable \"subaccount_id\" {\n  type        = string\n  description = \"The subaccount ID.\"\n  default     = \"\"\n}\n \nvariable \"custom_idp\" {\n  type        = string\n  description = \"Defines the custom IDP to be used for the subaccount\"\n  default = \"\"\n \n#  validation {\n#    condition     = can(regex(\"^[a-z-]\", var.custom_idp))\n#    error_message = \"Please enter a valid entry for the custom-idp of the subaccount.\"\n#  }\n}\n \nvariable \"region\" {\n  type        = string\n  description = \"The region where the sub account shall be created in.\"\n  default     = \"us10\"\n}\n \nvariable \"sap_build_apps_service_plan\" {\n  type        = string\n  description = \"The plan for sap_build_apps subscription\"\n  default     = \"free\"\n  validation {\n    condition     = contains([\"free\", \"standard\"], var.sap_build_apps_service_plan)\n    error_message = \"Invalid value for sap_build_apps_service_plan. Only 'free' and 'standard' are allowed.\"\n  }\n}\n \nvariable \"build_workzone_service_plan\" {\n  type        = string\n  description = \"The plan for build_workzone subscription\"\n  default     = \"free\"\n  validation {\n    condition     = contains([\"free\", \"standard\"], var.build_workzone_service_plan)\n    error_message = \"Invalid value for build_workzone_service_plan. Only 'free' and 'standard' are allowed.\"\n  }\n}\n \nvariable \"emergency_admins\" {\n  type        = list(string)\n  description = \"Defines the colleagues who are added to each subaccount as emergency administrators.\"\n}\n \nvariable \"users_BuildAppsAdmin\" {\n  type        = list(string)\n  description = \"Defines the colleagues who have the role of 'BuildAppsAdmin' in SAP Build Apps.\"\n}\n \nvariable \"users_BuildAppsDeveloper\" {\n  type        = list(string)\n  description = \"Defines the colleagues who have the role of 'BuildAppsDeveloper' in SAP Build Apps.\"\n}\n \nvariable \"users_RegistryAdmin\" {\n  type        = list(string)\n  description = \"Defines the colleagues who have the role of 'RegistryAdmin' in SAP Build Apps.\"\n}\n \nvariable \"users_RegistryDeveloper\" {\n  type        = list(string)\n  description = \"Defines the colleagues who have the role of RegistryDeveloper' in SAP Build Apps.\"\n}"
